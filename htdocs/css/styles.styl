@charset "UTF=8";

// ##########==========##########==========##########==========##########==========##########==========
// インクルーシブHTML + CSS参考
// ##########==========##########==========##########==========##########==========##########==========


// フォントサイズをパーセンテージ指定。
// ユーザ側でフォントサイズを調整可能とする。
html {
  font-size: 100%; // 下の設定が認識できないブラウザのための指定。
  font-size: 1em; //calc(1em + 1vw); // ビューポートの高さと幅に合わせてテキストサイズを調整。
}

main {
  //max-width: 60rem; // カラム幅を60文字に。 WCAG2.0 [1.4.8 視覚的提示]では80文字以内。
  // background-color: #eee; // アーレーン症候群の人たち向けにコントラストを控えめにする。
}

// WCAG2.0[1.4.8]より、1.5文字分の行送りを推奨
p {
  font-size: 1rem;
  line-height:1.5;
  // color: #222; //コントラストを控えめに。
}

// 改良したリンクのアンダーライン
p a {
  text-decoration: none;
  text-shadow: 0.05em 0 0 #fff, -0.05em 0 0 #fff,
               0 0.05em 0 #fff, 0 -0.05em 0 #fff,
               0.1em 0 0 #fff, -0.1em 0 0 #fff,
               0 0.1em 0 #fff, 0 -0.1em 0 #fff;
  background-image: linear-gradient(to right, currentColor 0%, currentColor 100%);
  background-repeat: repeat-x;
  background-position: bottom 0.05em center;
  background-size: 100% 0.05em;
}

// govで採用されているリンクのフォーカススタイル
p a:focus {
  outline: none;
  background-color: #ffbf47;
}

// ##### 自動化されたアイコン #####
// 外部リンク=相対リンクではない、かつ、現在のドメインではない
p[href^="http"]:not(href*="lostrpg-751c1.firebaseapp.com")::after{
  display:inline-block;
  width: 1em;
  height: 1em;
  //background-image: url('');
  background-repeat: no-repeat;
  background-position: center;
  background-size: 75% auto;
  // スクリーンリーダー用の代替テキスト
  content: '(外部リンク)';
  overflow: hidden;
  white-space: nowrap;
  text-indent: 1em; // アイコンの幅
}

// ##### メニュー #####
#nav-menu ul {
  display: none;
}

#nav-menu:target ul {
  display: block;
}

// ##### SVGスプライト #####
// メニューアイコン
button svg {
  width: 1em;
  height: 1em;
}

// ##### スクリーンリーダー専用 #####
// 見えないが読み上げられる
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}
// ##### スキップリンク #####
// スキップリンクをキーボードユーザ用に用意。Tabキーで表示
[href="#main"] {
  position: absolute;
  top: 0;
  right: 100%; // 画面外に移動
}
// tabでフォーカスが当たったときのみ表示
[href="#main"]:focus {
  right: auto;
}

// ##### 印刷用スタイルシート #####
// main以外のコンテンツは印刷時に非表示
@media print{
  body > *:not(main) {
    display: none;
  }
}

// ##########==========##########==========##########==========##########==========##########==========
// HTML + CSS デザイン参考
// ##########==========##########==========##########==========##########==========##########==========

// 基本色
:root {
  --main-color: #5D9AB2;
  --accent-color: #BF6A7A;
  --dark-color: #2B5566;
  --text-bright-color: #fff; // テキストの色
  --icon-color: #fff;        // アイコンの色
  --icon-bk-color: #ddd;     // 丸型ボックスの色
  --gray-color: #ddd;
  --large-width: 1000px;       // 横幅の最大値
  --middle-width: 800px;
}

// 基本設定：フォントサイズ
// スマートフォン向け
@media (max-width: 599px) {
  :root {
    font-size: 14px;  
  }
}

// タブレット向け
@media (min-width: 600px) and (max-width: 799px) {
  :root {
    font-size: 16px;  
  }
}

// PC向0け
@media (min-width: 800px) {
  :root {
    font-size: 18px;  
  }
}


//- font-awasomeの代替テキストのチラツキを防ぐCSS
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

// 基本設定:ページ全体
body {
  margin: 0; // 画像を横幅いっぱいに表示するため、余白を削除。
  font-family: 'メイリオ',                 // windows
               'Hiragino Kaku Gothic Pro', // OS X, iOS 
                sans-serif;                // その他
  font-size: 16px; // 基本フォントサイズをブラウザ標準のものに指定
}



// ##### コンテンツA: ヒーローイメージ ######
.hero-header {
  // コンテナを中央揃え
  display: flex;
  align-items: center;
  justify-content: center;
  // 画像の設定
  height: 100vh; // 画像をブラウザいっぱいの高さに表示。ボックスを画面と同じ高さとする。
  min-height: 450px; // 最小限確保するボックスの大きさを定義
  background-image: 
    linear-gradient(rgba(0,0,0,0.1), rgba(0,0,0,0.5)), // 半透明な黒色のグラデーション画像を重ねて表示。
    url(../html/images/yun_1139.jpg);                         // 背景画像 image-urlはstylusの実行時に定義(docker/postcss/app/jsを参照)
  background-position: center;
  background-size: cover; // 自動的に拡大縮小・切り出し
  // 文字の設定
  color: #fff; // 変数に対応していないブラウザ用の設定
  color: var(--text-bright-color); // テキストを白抜きにする
  text-align: center;
  
  // .hero-header.compact
  &.compact{
    height: 400px;
    min-height: 0;
  }

  h1 {
    margin-top: 0;
    margin-bottom: 10px;
    font-size: 15vw; // vwは画面の横幅を100vwとする単位
    font-family: 'Montserrat', sans-serif; // Webフォントを使用
    letter-spacing: 0.2em; // emはフォントサイズ = 1em
    margin-left: 0.2em; // letter-spacingは各文字の右側に挿入される。中央揃えのバランスをとるため1文字目の左側にも余白を挿入
  }
  p {
    margin-top: 0;
    margin-bottom: 0;
    font-size: 18px;
    color: inherit; // pで設定されている色を上書き。inherit: 親要素のcolor
  }
  // リンクをボタン風に表示
  a {
    display: inline-block;
    margin-top: 20px;
    padding: 10px 30px; // 上下10px、左右30px
    border: solid 3px currentColor; // currentColor: テキストと同じ色
    border-radius: 6px;
    background-color: #bf6a7a;
    background-color: var(--accent-color);
    color: var(--text-bright-color);
    font-size: 14px;
    text-decoration: none;
  }
  a:hover {
    background-image: linear-gradient(rgba(255,255,255, 0.2), rgba(255,255,255, 0.2)); // 半透明な白色の画像を重ねて明るくする
  }
}

// ##### コンテンツB:概要 ######
.conB{
  h2 {
    margin-top: 0;
    margin-bottom: 10px;
    font-size: 20px;
  }
  p {
    margin-top: 0;
    margin-bottom: 20px;
    font-size: 14px;
    line-height: 1.8; // 近年のWebページは行の高さを大きく撮り文章をゆったりレイアウトする傾向
    color: inherit;
    opacity: 0.8;     // 見出しより若干薄い色に
  }
  a {
    color:(--main-color);
    text-decoration: none;
  }
  a:hover {
    text-decoration: underline;
  }

  .icon {
    display: inline-block;
    margin-bottom: 20px;
    font-size: 40px;
    width: 2em;         // アイコンを囲む円をフォントサイズの2倍の大きさにする
    line-height: 2em;   // アイコンを円の中央に配置する
    border-radius: 50%; // ボックスを真円にするため、角丸の半径を横幅の半分の大きさにする
    text-align: center; // アイコンを円の中央に配置する
    background-color: var(--icon-bk-color);
    color: var(--icon-color);
  }
  .container {
    padding-top:80px;
    padding-bottom: 80px;
  }
  .text {
    padding-left: 20px;
    padding-right: 20px;
    padding-bottom: 60px;
    text-align: center;  
  }
}

.conC {
  // ブロック全体に色をつけたデザインにする
  background-color: var(--main-color);
  color: var(--text-bright-color);
  //.conBの見出しとデザインに揃える
  p {
    @extend .conB p
  }
  h2 {
    @extend .conB h2
  }
  .image {
    height: 400px;
    max-width: 500px;
    background-image: url(../html/images/woo.png);
    background-position: center;
    background-size: cover;
  }
  .text {
    padding: 20px;
  }
  // リンクをボタン風にする
  a{
    @extend .hero-header a
  }
  a:hover{
    @extend .hero-header a:hover
  }
}

// ルールについて
.conD {

  p {
    @extend .conC p
  }
  h2 {
    @extend .conC h2
  }
  .image {
    height: 400px;
    max-width: 490px;
    background-image: url(../html/images/losttop_s.png);
    background-position: center;
    background-size: cover;
  }
  .text {
    padding: 20px;
  }
  .container{
    padding-top: 2px;
  }
}

// フッター
footer {
  color: #fff;
  color: var(--text-bright-color);
  background-color: var(--dark-color);

  .container{
    padding: 40px 20px;
  }
  p {
    color: inherit;
  }
}
// フッターA サイト情報
.footA{
  margin-bottom: 30px;

  h2 {
    margin-top: 0;
    margin-bottom: 10px;
    font-family: 'Montserrat', sans-serif;
    font-size: 30px;
    letter-spacing: 0.2em;
  }
  p{
    margin-top: 0;
    margin-bottom: 0;
    font-size: 14px;
  }
  a {
    color:inherit;
    text-decoration: none;
    text-shadow: none;
  }
}

// フッタB サイトナビ
.footB {
  // 下線をつけた見出しデザイン
  h3 {
    margin-top: 0;
    margin-bottom: 10px;
    border-bottom: solid 1px currentColor;
    font-size: 14px;
  }

  ul {
    // デフォルトの左の●を削除
    margin: 0;
    padding: 0;
    list-style: none;
  }

  a{
    // 色とサイズの調整
    color: inherit;
    font-size: 12px;
    text-decoration: none;
    // リンクを大きく広げる
    display: block; // aの構成するボックスがテキストに合わせた横幅ではなく親要素に合わせた横幅となる
    padding: 5px;   // 内側に余白を作ってリンクの高さを調整
  }
  // カーソルを重ねた時に背景色が変わるように設定
  a:hover{
    background-color: rgba(0,0,0,0.3);
  }
  // 上下間隔の調整
  div{
    margin-bottom: 20px;
  }
}

// フッタC: コピーライト
.footC {
  font-size: 12px;
  text-align: center;
  font-family: 'Montserrat', sans-serif; // 欧文フォントで表示しないと©の色がおかしくなる

  a {
    color: inherit;
  }
}

// フッタD：SNS
.footD {
  margin-top: 20px;

  ul {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex;
  }
  a {
    display: block;
    padding: 5px;
    color: inherit;
    font-size: 12px;
    text-decoration: none;
   
    // アイコンを丸い枠で囲む
    padding: 0; // 枠の内側に余白を入れるとその分大きくなってしまうので削除
    border: solid 1px currentColor;
    width: 2em;
    line-height: 2em;
    border-radius: 50%;
    text-align: center;

    // 大きさと間隔の調整
    margin-right: 8px;
    font-size: 16px;
  }
  a:hover{
    background-color: rgba(0, 0, 0, 0.3);
  }
}

// ヘッダー
header{
  position: absolute; // 重ねる
  top:0;
  left:0;
  z-index: 100; // 一番上に重ねる
  width: 100%;  // 画面の横幅いっぱいに表示
  background-color: rgba(255,255,255,0.9); // 半透明の白色に 
}

// ヒーローイメージを表示しないページ用の設定
.nohero header{
  position: static;
  border-bottom: solid 1px var(--gray-color);
}

// ヘッダA: サイト名
.headA {
  display: inline-block;
  line-height: 70px;
  padding-left: 20px;
  padding-right: 20px;
  background-color: var(--main-color);
  color: var(--text-bright-color);
  font-family: 'Montserrat', sans-serif;
  font-size: 24px;
  text-decoration: none;
}

// ヘッダB: ナビゲーションメニュー
.headB{
  // リストマークの解除をフッタと合わせる
  ul{
    @extend .footB ul
  }
  a {
    @extend .footB a
    padding: 15px; // 各リンクを大きくするため余白サイズを大きくする
  }
  a:hover {
    @extend .footB a:hover
  }
}

// コンテンツページ:記事

.content {
  h1 {
    // 見出しの行頭にバーをつけたデザイン
    padding-left: 0.5rem;
    border-left: solid 0.75rem var(--accent-color);
    font-size: 2rem;
  }
  p {
    font-size: 1rem;
    line-height: 2;
  }
  .container{
    padding: 20px 10px;
    max-width: 800px;
    max-width: var(--middle-width);
    margin-left: auto;
    margin-right: auto;
  }
  img {
    display: block;
    max-width: 100%;// 画像は記事の横幅に合わせて表示
  }
}

// コンテンツページ：パンくずリスト
.css-fontawesome { //fontawesomeでしておくとよい設定
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
}
.bread{
  ol{
    display: flex;
    margin: 0;
    padding: 0;
    list-style: none;
  }
  a{
    display: block;
    padding: 5px;
    color: inherit;
    font-size: 0.875rem; // ブラウザ画面に応じて3段階に変化。12pxを0.875remとしている。12.25px, 14px, 15.75px
    text-decoration: none;
    // font awesome用の設定
    svg {
      margin-left: 10px;
      opacity: 0.3;
    }
  }
  a:hover{
    background-color: rgba(0,0,0,0.3);
  }
  a::after{
    //@extend .css-fontawesome
    //margin-left: 10px; // a svgに移動
    // opacity: 0.3;     // a svgに移動
    display: none;       // svgに置換されるので非表示
    font-family: 'Font Awesome 5 Solid'; // https://fontawesome.com/icons/angle-right?style=solid
    content: '\f105'; //font awesomeの文字コード: https://fontawesome.com/icons/angle-right?style=solid
  }
}

// ##### Historyページ #####

.history{
  // ブロック全体に色をつけたデザインにする
  background-color: var(--main-color);
  color: var(--text-bright-color);
  //.conBの見出しとデザインに揃える
  p {
    @extend .conB p
  }
  h2 {
    @extend .conB h2
    font-size: 1.5rem;
  }
  .image {
    max-height: 500px;
    background-image: url(../html/images/takibi.png)
    background-position: center;
    background-size: cover;
  }

  .text {
    padding: 20px;
  }
  dl {
    font-size: 0.875rem;
  }
}

// ##### contact ページ #####
.contact {
  margin-top: 20px;
  margin-bottom: 20px;
  padding:20px;
  border: solid 1px var(--gray-color);
  text-align: center;
  h2{
    margin-top: 0;
    font-size: 1.2rem;
  }
  .icon{
    @extend .conB .icon
    font-size: 2.2rem;
    background-color: var(--main-color);
    color: var(--icon-color);
  }
  a{
    font-size: 1.4rem;
    color:inherit;
    text-decoration: none;
  }
}

// ##### List ページ #####

.listA {

  // 画像の横幅に関係なく一定のフォントサイズで表示
  h2 {
    font-size: 18px;
  }
  // 見出しよりも薄く表示
  p {
    font-size: 14px;
    opacity: 0.8;
  }
  .image{
    min-height: 250px;
    background-position: center;
    background-size: auto; // cover -> auto
                           // auto  背景画像を画像固有の比率が維持される方向に拡大縮小します。
                           // cover 背景画像が背景配置領域と同じか大きな幅と高さを持つことが保証される範囲で、なるべく小さくすべきであることを示します。
                           // contain このキーワードは、背景画像が背景配置領域と同じか小さな幅と高さを持つことが保証される範囲で、なるべく大きくすべきであることを示します。cover;  
    background-repeat: no-repeat; // autoに変えてno-repeatに変えることで画像をそのまま表示
  }
  // カード型のデザインにする
  a {
    margin:10px;
    display: block;
    border: solid 1px var(--gray-color);
    color:inherit;
    text-decoration: none;
    flex: 1; // 横に並んだ枠の高さをそろえる
  }
  a:hover{
    opacity: 0.8;
  }
  .text{
    margin: 10px;  
  }
  // メディアクエリを使用せず、フレキシブルボックスレイアウトの機能で
  // 並べ方を決定
  .container {
    display: flex;
    flex-wrap: wrap;
  }
  article{
    flex: 1 1 300px; // 300pxの横幅を基本に必要に応じて伸縮
    display: flex; // article内のaの高さをそろえるためにフレキシブルボックスレイアウトの機能を利用
  }
}


//##### 小さい画面用設定 #####
// ブレークポイント：iPadの画面の横幅 = 768px - 1px
@media(max-width: 767px) {
  header{
    .container-small{
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
  }
  // トグルボタンのデザインを変更
  .headC{
    margin-right: 10px;
    padding:0;
    border: none;
    outline: none;
    background:none;
    font-size: 28px;
    opacity: 0.5;
    cursor: pointer;
  }
  .headC:hover {
    opacity: 0.3;
  }
  // 小さな画面ではナビゲーションメニューは表示されない
  .headB {
    display: none;
  }
}

//##### 大きい画面用設定 #####
// ブレークポイント：iPadの画面の横幅 = 768px
@media(min-width:768px){
  .hero-header {
    h1 {
      font-size: 115px; // フォントサイズを大きくしすぎない
    }
    p {
      font-size: 24px; // キャッチフレーズを1段階大きくする
    }
  }
  // 概要
  .conB{
    // 横に並べる設定
    .container {
      display: flex; //横に並べる
      // 間延びしすぎないように最大値を指定し、中央に配置するためにmarginをautoに設定する
      max-width: 1000px;
      max-width: var(--large-width);
      margin-left: auto;
      margin-right: auto;
    }

    .text {
      flex: 1;
    }
  }
  // はじめに
  #first {

  }
  .conC {
    // 概要と横幅を揃える
    .container {
      @extend .conB .container 
      padding-bottom: 0;
      padding-top: 0;
    }
    .image {
      flex:3
    }
    .text {
      flex: 2;
      passing: 50px;
    }
  }
  .conD {
    .container {
      @extend .conC .container 
      flex-direction: row-reverse; // 画像とテキストの並び順を逆にする
      padding-bottom: 40px;
      padding-top: 40px;
    }
    // 画像を固定しテキストのみ幅が変わるように
    .image {
      flex: 0 0 490px;
    }
    .text{
      flex:1;
    }
  }
  // サイト情報とフッタメニューを横に並べて表示する
  footer{
    .container{
      // 横幅をコンテンツと揃える
      @extend .conB .container 
      display: flex;
      flex-wrap: wrap; // パーツの横幅が100%を超えた時に下に押し出して表示
    }
  }
  .footA{
    flex: 0 0 40%; // 横幅を指定して配置を調整する
  }
  .footB{
    flex: 0 0 60%;
    // 横に並べる
    display: flex;
    div {
      flex: 1;
    }
    // 左右間隔の調整
    div:not(:first-child) {
      margin-left: 40px;
    }
  }
  .footC{
    flex: 0 0 100%; // カラム落ちの形で下に押し出して表示
  }
  // サイト名とナビゲーションメニューを左右に配置
  header {
    .container{
      // 横幅をコンテンツと揃える
      max-width: 1000px;
      max-width: var(--large-width);
      margin-left: auto;
      margin-right: auto;
      display: flex;
      align-items: center;            // 上下方向中央揃え
      justify-content: space-between; // 左右方向両端揃え
    }
  }
  // ナビゲーションメニューを横に並べる
  .headB {
    // 小さい画面で非表示にしていると、画面を大きくしたときにナビゲーションメニューが非表示になるケースがある
    // !importantで上記の問題を回避する。
    display: block !important; 
    ul {
      display: flex;
    }
  }
  // 大きい画面ではトグルボタンを非表示
  .headC{
    display: none;  
  }
  // history
  .history{
    .container{
      @extend .conC .container 
    }
   .image{
     flex:2;
    }
    .text{
      flex:3;
      padding: 50px;
    }
  }
  .contact-wrap {
    display: flex;
  }
  .contact {
    flex:1;
  }
  .contact:first-child {
    margin-right: 20px;
  }
}